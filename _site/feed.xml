<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="http://localhost:4000/securelee/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/securelee/" rel="alternate" type="text/html" /><updated>2022-08-02T22:43:58+01:00</updated><id>http://localhost:4000/securelee/feed.xml</id><title type="html">SecureLee</title><subtitle>My thoughts and findings on my journey into the cyber security profession.</subtitle><entry><title type="html">Setting up ZSH on linux with antigen</title><link href="http://localhost:4000/securelee/2022/08/02/zsh-initial-setup-antigen.html" rel="alternate" type="text/html" title="Setting up ZSH on linux with antigen" /><published>2022-08-02T20:00:00+01:00</published><updated>2022-08-02T20:00:00+01:00</updated><id>http://localhost:4000/securelee/2022/08/02/zsh-initial-setup-antigen</id><content type="html" xml:base="http://localhost:4000/securelee/2022/08/02/zsh-initial-setup-antigen.html">&lt;p&gt;Here is my setup for my shell in linux, I use &lt;a href=&quot;https://github.com/zsh-users/antigen&quot;&gt;antigen&lt;/a&gt; to manage plugins and &lt;a href=&quot;https://github.com/romkatv/powerlevel10k&quot;&gt;Powerlevel10k&lt;/a&gt; them by &lt;a href=&quot;https://github.com/romkatv&quot;&gt;Roman Perepelitsa&lt;/a&gt;. All commands assume you are in your home directory.&lt;/p&gt;

&lt;p&gt;First things first is to install some dependencies:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install zsh git curl autojump fonts-powerline wget&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;(If your not on Ubuntu or Debian, you can follow instructions &lt;a href=&quot;https://github.com/powerline/fonts&quot;&gt;here&lt;/a&gt; for powerline fonts.)&lt;/p&gt;

&lt;p&gt;Next up is to get antigen:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl -L git.io/antigen &amp;gt; antigen.zsh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Then we need to create our zshrc file and add a couple of lines to enable antigen:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vim .zshrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;And add the following lines:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;source /home/vm1/antigen.zsh   
antigen init ~/.antigenrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now we need to create our antigenrc file and configure our plugins:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vim .antigenrc&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following lines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-conf&quot; data-lang=&quot;conf&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Load the oh-my-zsh&apos;s library.  
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;  

&lt;span class=&quot;c&quot;&gt;# Bundles from the default repo (robbyrussell&apos;s oh-my-zsh).   
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;git&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt;  
&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lein&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;not&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;found&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docker&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# use the j autojump directory function
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;autojump&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# Syntax highlighting bundle.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;syntax&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;highlighting&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;autosuggestions&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;completions&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# double esc to add sudo
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hcgraf&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;sudo&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# colored man pages
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ael&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;zsh&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;colored&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;man&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Load the theme.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theme&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;romkatv&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;powerlevel10k&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Tell Antigen that you&apos;re done.
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;antigen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Configure powerlevel10k:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p10k configure&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Change the default shell to zsh:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chsh -s /usr/bin/zsh&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Relaod shell for changes to take effect.&lt;/p&gt;

&lt;p&gt;Here are links to MesloLGS, one of my prefered fonts and the default powerline fault used by powerlevel10k, ideal for manual installation if your not on Ubuntu or Debian:&lt;br /&gt;
&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf&quot;&gt;MesloLGS Regular&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf&quot;&gt;MesloLGS Bold&lt;/a&gt; &lt;br /&gt;
&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf&quot;&gt;MesloLGS Italic&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf&quot;&gt;MesloLGS Bold Italic&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="linux" /><category term="zsh" /><category term="antigen" /><summary type="html">Here is my setup for my shell in linux, I use antigen to manage plugins and Powerlevel10k them by Roman Perepelitsa. All commands assume you are in your home directory.</summary></entry><entry><title type="html">Using CMD to create individual archives of multiple folders.</title><link href="http://localhost:4000/securelee/2022/08/02/windows-cmd-7zip-folders-archives.html" rel="alternate" type="text/html" title="Using CMD to create individual archives of multiple folders." /><published>2022-08-02T14:14:00+01:00</published><updated>2022-08-02T14:14:00+01:00</updated><id>http://localhost:4000/securelee/2022/08/02/windows-cmd-7zip-folders-archives</id><content type="html" xml:base="http://localhost:4000/securelee/2022/08/02/windows-cmd-7zip-folders-archives.html">&lt;p&gt;Using the command line in Windows to create and individual zip archive of multiple folders.&lt;/p&gt;

&lt;p&gt;Use case I have a directory with:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;folder1&lt;/code&gt;    &lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;folder2&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;folder3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Which I want to make into:&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;folder1.zip&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;folder2.zip&lt;/code&gt;&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;folder3.zip&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can use the following command, I am using 7zip replace with your archive tool of choice. This will create a zip in the root folder.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for /D %d in (.) do &quot;C:\Program Files\7-Zip\7z.exe&quot; a -tzip &quot;%d.zip&quot; &quot;.%d*&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Break down of command:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;for&lt;/code&gt; each directory &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%d&lt;/code&gt; is the variable and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/D&lt;/code&gt; defines we’re looking at directories.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(*.*)&lt;/code&gt; defines the search location, root of folder your in.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;do &quot;C:\Program Files\7-Zip\7z.exe&quot; a -tzip&lt;/code&gt; - 7zip command to add to a zip archive.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;%%d.zip&quot;&lt;/code&gt; path of where you want the archive to be located.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;.%%d*&quot;&lt;/code&gt; defines the naming convention within the zip, this will have no subdirectory within the zip&lt;/p&gt;</content><author><name></name></author><category term="windows" /><category term="CMD" /><category term="7zip" /><category term="command" /><category term="line" /><summary type="html">Using the command line in Windows to create and individual zip archive of multiple folders.</summary></entry><entry><title type="html">Docker volume location in WSL2</title><link href="http://localhost:4000/securelee/2022/08/02/docker-wsl2-volumes.html" rel="alternate" type="text/html" title="Docker volume location in WSL2" /><published>2022-08-02T14:07:31+01:00</published><updated>2022-08-02T14:07:31+01:00</updated><id>http://localhost:4000/securelee/2022/08/02/docker-wsl2-volumes</id><content type="html" xml:base="http://localhost:4000/securelee/2022/08/02/docker-wsl2-volumes.html">&lt;p&gt;The location where Docker stores the data for volumes created when using it in WSL2 mode:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\wsl.localhost\docker-desktop-data\data\docker\volumes&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This has moved several times over it’s lifetime so far and may move again in the future.&lt;/p&gt;</content><author><name></name></author><category term="docker" /><category term="wsl2" /><category term="volumes" /><summary type="html">The location where Docker stores the data for volumes created when using it in WSL2 mode:</summary></entry><entry><title type="html">Welcome to Jekyll</title><link href="http://localhost:4000/securelee/2022/08/02/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll" /><published>2022-08-02T13:56:31+01:00</published><updated>2022-08-02T13:56:31+01:00</updated><id>http://localhost:4000/securelee/2022/08/02/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/securelee/2022/08/02/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;Jekyll requires blog post files to be named according to the following format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Where &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MONTH&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;Tom&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &apos;Hi, Tom&apos; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry></feed>